{"ast":null,"code":"var _jsxFileName = \"/Users/manhns/Documents/traning/tranning_ReactJS/FWA.EC.ManhNS1/demo-lifecycle/src/function-component/FunctionComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FunctionComponent = () => {\n  _s();\n  // Phase Mounting\n  const [data, setData] = useState(\"Initial Data\");\n  useEffect(() => {\n    console.log(\"useEffect (componentDidMount)\");\n    // Thực hiện các tác vụ sau khi component đã được render lần đầu tiên.\n    return () => {\n      console.log(\"useEffect Cleanup (componentWillUnmount)\");\n      // Thực hiện các tác vụ trước khi component bị unmounted.\n    };\n  }, []); // Mảng rỗng để đảm bảo chỉ chạy một lần sau khi mount\n\n  // Phase Updating\n  useEffect(() => {\n    console.log(\"useEffect (componentDidUpdate)\");\n    // Thực hiện các tác vụ sau mỗi lần render.\n  }, [data]); // Chỉ chạy khi giá trị data thay đổi\n\n  // Phase Memoization (tối ưu performance)\n  const memoizedValue = useMemo(() => {\n    console.log(\"useMemo\");\n    // Thực hiện các tính toán và trả về một giá trị được memoized.\n    return data.toUpperCase();\n  }, [data]); // Chỉ tính toán lại khi giá trị data thay đổi\n\n  // Phase Callback Memoization (tối ưu performance cho hàm callback)\n  const handleClick = useCallback(() => {\n    console.log(\"useCallback\");\n    // Thực hiện các hành động khi nút được nhấn.\n  }, []); // Chỉ tạo lại hàm khi dependencies thay đổi\n\n  // Render\n  console.log(\"Render\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setData(\"New Data\"),\n      children: \"Change Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Memoized Value: \", memoizedValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(FunctionComponent, \"huXpl4rrCJLTHJ6+Bd3gqoVFnVY=\");\n_c = FunctionComponent;\nexport default FunctionComponent;\nvar _c;\n$RefreshReg$(_c, \"FunctionComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","jsxDEV","_jsxDEV","FunctionComponent","_s","data","setData","console","log","memoizedValue","toUpperCase","handleClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/manhns/Documents/traning/tranning_ReactJS/FWA.EC.ManhNS1/demo-lifecycle/src/function-component/FunctionComponent.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nconst FunctionComponent = () => {\n  // Phase Mounting\n  const [data, setData] = useState(\"Initial Data\");\n\n  useEffect(() => {\n    console.log(\"useEffect (componentDidMount)\");\n    // Thực hiện các tác vụ sau khi component đã được render lần đầu tiên.\n    return () => {\n      console.log(\"useEffect Cleanup (componentWillUnmount)\");\n      // Thực hiện các tác vụ trước khi component bị unmounted.\n    };\n  }, []); // Mảng rỗng để đảm bảo chỉ chạy một lần sau khi mount\n\n  // Phase Updating\n  useEffect(() => {\n    console.log(\"useEffect (componentDidUpdate)\");\n    // Thực hiện các tác vụ sau mỗi lần render.\n  }, [data]); // Chỉ chạy khi giá trị data thay đổi\n\n  // Phase Memoization (tối ưu performance)\n  const memoizedValue = useMemo(() => {\n    console.log(\"useMemo\");\n    // Thực hiện các tính toán và trả về một giá trị được memoized.\n    return data.toUpperCase();\n  }, [data]); // Chỉ tính toán lại khi giá trị data thay đổi\n\n  // Phase Callback Memoization (tối ưu performance cho hàm callback)\n  const handleClick = useCallback(() => {\n    console.log(\"useCallback\");\n    // Thực hiện các hành động khi nút được nhấn.\n  }, []); // Chỉ tạo lại hàm khi dependencies thay đổi\n\n  // Render\n  console.log(\"Render\");\n  return (\n    <div>\n      <p>{data}</p>\n      <button onClick={() => setData(\"New Data\")}>Change Data</button>\n      <p>Memoized Value: {memoizedValue}</p>\n      <button onClick={handleClick}>Click Me</button>\n    </div>\n  );\n};\n\nexport default FunctionComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,cAAc,CAAC;EAEhDF,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C;IACA,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACvD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAV,SAAS,CAAC,MAAM;IACdS,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ;EACA,MAAMI,aAAa,GAAGV,OAAO,CAAC,MAAM;IAClCQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB;IACA,OAAOH,IAAI,CAACK,WAAW,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ;EACA,MAAMM,WAAW,GAAGd,WAAW,CAAC,MAAM;IACpCU,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAD,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAIP;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbd,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMX,OAAO,CAAC,UAAU,CAAE;MAAAM,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEd,OAAA;MAAAU,QAAA,GAAG,kBAAgB,EAACH,aAAa;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCd,OAAA;MAAQe,OAAO,EAAEN,WAAY;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACZ,EAAA,CA1CID,iBAAiB;AAAAe,EAAA,GAAjBf,iBAAiB;AA4CvB,eAAeA,iBAAiB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}