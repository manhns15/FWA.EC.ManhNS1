{"ast":null,"code":"var _jsxFileName = \"/Users/manhns/Documents/traning/tranning_ReactJS/FWA.EC.ManhNS1/demo-hooks/src/useMemo/UseMemo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Sử dụng useMemo để memoize giá trị của giai thừa\n  const factorial = useMemo(() => {\n    console.log(\"Calculating factorial...\");\n    let result = 1;\n    for (let i = 1; i <= count; i++) {\n      console.log(\"i\", i);\n      result *= i;\n    }\n    console.log(\"result\", result);\n    return result;\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Factorial: \", factorial]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(UseMemo, \"+51fCxa/8Gf28HLFjColTZSJlTY=\");\n_c = UseMemo;\nexport default UseMemo;\nvar _c;\n$RefreshReg$(_c, \"UseMemo\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","jsxDEV","_jsxDEV","UseMemo","_s","count","setCount","factorial","console","log","result","i","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/manhns/Documents/traning/tranning_ReactJS/FWA.EC.ManhNS1/demo-hooks/src/useMemo/UseMemo.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\n\nconst UseMemo = () => {\n  const [count, setCount] = useState(0);\n\n  // Sử dụng useMemo để memoize giá trị của giai thừa\n  const factorial = useMemo(() => {\n    console.log(\"Calculating factorial...\");\n    let result = 1;\n    for (let i = 1; i <= count; i++) {\n      console.log(\"i\", i);\n      result *= i;\n    }\n    console.log(\"result\", result);\n    return result;\n  }, [count]);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <p>Factorial: {factorial}</p>\n      {/* Truyền hàm increment vào component con */}\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n};\n\nexport default UseMemo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMO,SAAS,GAAGR,OAAO,CAAC,MAAM;IAC9BS,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,IAAIC,MAAM,GAAG,CAAC;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,KAAK,EAAEM,CAAC,EAAE,EAAE;MAC/BH,OAAO,CAACC,GAAG,CAAC,GAAG,EAAEE,CAAC,CAAC;MACnBD,MAAM,IAAIC,CAAC;IACb;IACAH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,MAAM,CAAC;IAC7B,OAAOA,MAAM;EACf,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA;MAAAU,QAAA,GAAG,aAAW,EAACL,SAAS;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7Bd,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAO,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACZ,EAAA,CAvBID,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}